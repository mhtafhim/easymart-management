/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package easymartmanagement;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static jdk.nashorn.internal.objects.NativeString.toLowerCase;
import static jdk.nashorn.internal.objects.NativeString.toUpperCase;

/**
 *
 * @author Tafhim
 */
public class RegisterPage extends javax.swing.JFrame {

    /**
     * Creates new form RegisterPage
     */
    Connection con;
    int mode = 0;

    public RegisterPage() {
        initComponents();
        try {
            con = DriverManager.getConnection("jdbc:derby://localhost:1527/easymart");
            if (con != null) {
                System.out.println("connection establised");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error in connection", JOptionPane.INFORMATION_MESSAGE);
        }
        mode = 0;

    }

    public RegisterPage(int x) {
        initComponents();
        try {
            con = DriverManager.getConnection("jdbc:derby://localhost:1527/easymart");
            if (con != null) {
                System.out.println("connection establised");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error in connection", JOptionPane.INFORMATION_MESSAGE);
        }

        CashierRegiLabel.setText("Register for Admin");
        //     RegisterButton.setText("Update");
        mode = 2;
        //  updateCashierData(email);

    }
    
    
      public RegisterPage(String email,int temp) {
        initComponents();
        try {
            con = DriverManager.getConnection("jdbc:derby://localhost:1527/easymart");
            if (con != null) {
                System.out.println("connection establised");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error in connection", JOptionPane.INFORMATION_MESSAGE);
        }

        CashierRegiLabel.setText("Update Info of Admin");
        RegisterButton.setText("Update");
        mode = 1;
        updateCashierData(email);
    }
      

    public RegisterPage(String email) {
        initComponents();
        try {
            con = DriverManager.getConnection("jdbc:derby://localhost:1527/easymart");
            if (con != null) {
                System.out.println("connection establised");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error in connection", JOptionPane.INFORMATION_MESSAGE);
        }

        CashierRegiLabel.setText("Update Info of Cashier");
        RegisterButton.setText("Update");
        mode = 1;
        updateCashierData(email);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CashierRegiLabel = new javax.swing.JLabel();
        RegisterButton = new javax.swing.JButton();
        ClearButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        txtUserName = new textfield.TextField();
        txtEmail = new textfield.TextField();
        txtMobile = new textfield.TextField();
        txtAddress = new textfield.TextField();
        txtPassword = new textfield.TextField();
        txtName1 = new textfield.TextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        CashierRegiLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        CashierRegiLabel.setForeground(new java.awt.Color(153, 0, 0));
        CashierRegiLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CashierRegiLabel.setText("Register for cashier");

        RegisterButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        RegisterButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/save.png"))); // NOI18N
        RegisterButton.setText("Register");
        RegisterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterButtonActionPerformed(evt);
            }
        });

        ClearButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ClearButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/clear.png"))); // NOI18N
        ClearButton.setText("Clear");

        exitButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        exitButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/exit small.png"))); // NOI18N
        exitButton.setText("Close");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        txtUserName.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtUserName.setLabelText("Username");

        txtEmail.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtEmail.setLabelText("Email");

        txtMobile.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtMobile.setLabelText("Mobile");

        txtAddress.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtAddress.setLabelText("Address");

        txtPassword.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtPassword.setLabelText("Password");

        txtName1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtName1.setLabelText("Name");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(CashierRegiLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(272, 272, 272)
                            .addComponent(RegisterButton)
                            .addGap(139, 139, 139)
                            .addComponent(ClearButton))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(369, 369, 369)
                            .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(174, 174, 174)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtMobile, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtName1, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(204, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CashierRegiLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(txtName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtMobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RegisterButton)
                    .addComponent(ClearButton))
                .addGap(45, 45, 45)
                .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void updateCashierData(String mail) {
        try {
            // TODO add your handling code here:
            mail = toLowerCase(mail);
            String sql = "SELECT * FROM LOGINDATA WHERE EMAIL = '" + mail + "' OR USERNAME = '" + mail + "'";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {

                txtName1.setText(rs.getString("NAME"));
                txtUserName.setText(rs.getString("USERNAME"));
                txtEmail.setText(rs.getString("EMAIL"));
                txtAddress.setText(rs.getString("ADDRESS"));
                txtPassword.setText(rs.getString("PASSWORD"));
                txtMobile.setText(rs.getString("MOBILE"));
            }
            txtEmail.setEditable(false);

        } catch (SQLException ex) {
            Logger.getLogger(ItemListFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void registrationProcess() {
        int row = -1;
        String name = txtName1.getText();
        txtName1.setText("");
        String address = txtAddress.getText();
        String email = toLowerCase(txtEmail.getText());
        String mobile = txtMobile.getText();
        String password = txtPassword.getText();
        String username = toLowerCase(txtUserName.getText());
        txtEmail.setText("");
        txtMobile.setText("");
        txtPassword.setText("");
        try {
            String sql = "INSERT INTO LOGINDATA(NAME,EMAIL, MOBILE,ADDRESS,PASSWORD,ROLE,USERNAME) VALUES( ?,?,  ?,  ?,  ?, ?,?)";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, name);
            ps.setString(2, email);
            ps.setString(3, mobile);
            ps.setString(4, address);
            ps.setString(5, password);
            ps.setString(6, "cashier");
            ps.setString(7, username);

            row = ps.executeUpdate();

            System.out.println("Registration successfull");
            JOptionPane.showMessageDialog(null, "Registration successfull", "Information", JOptionPane.INFORMATION_MESSAGE);

        } catch (SQLException ex) {

            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.INFORMATION_MESSAGE);

        }
    }

    private void updateData() {
        int row = -1;
        String name = txtName1.getText();
        txtName1.setText("");
        String address = txtAddress.getText();
        String email = toLowerCase(txtEmail.getText());
        String mobile = txtMobile.getText();
        String password = txtPassword.getText();
        String username = toLowerCase(txtUserName.getText());
        txtEmail.setText("");
        txtMobile.setText("");
        txtPassword.setText("");

        try {
            String sql = "UPDATE LOGINDATA SET NAME = '" + name + "', USERNAME = '" + username + "', MOBILE = '" + mobile + "', ADDRESS = '" + address + "', PASSWORD = '" + password + "'  WHERE EMAIL = '" + email + "'";
            Statement st = con.createStatement();
            row = st.executeUpdate(sql);
            dispose();
            JOptionPane.showMessageDialog(null, "Data updated successful. Row:" + row, "Information", JOptionPane.INFORMATION_MESSAGE);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.INFORMATION_MESSAGE);

        }

    }
    
    
    private void registerNewAdmin(){
         int row = -1;
        String name = txtName1.getText();
        txtName1.setText("");
        String address = txtAddress.getText();
        String email = toLowerCase(txtEmail.getText());
        String mobile = txtMobile.getText();
        String password = txtPassword.getText();
        String username = toLowerCase(txtUserName.getText());
        txtEmail.setText("");
        txtMobile.setText("");
        txtPassword.setText("");
        try {
            String sql = "INSERT INTO LOGINDATA(NAME,EMAIL, MOBILE,ADDRESS,PASSWORD,ROLE,USERNAME) VALUES( ?,?,  ?,  ?,  ?, ?,?)";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, name);
            ps.setString(2, email);
            ps.setString(3, mobile);
            ps.setString(4, address);
            ps.setString(5, password);
            ps.setString(6, "admin");
            ps.setString(7, username);

            row = ps.executeUpdate();

            System.out.println("Registration successfull");
            
            dispose();
            JOptionPane.showMessageDialog(null, "Registration successfull", "Information", JOptionPane.INFORMATION_MESSAGE);
            

        } catch (SQLException ex) {

            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.INFORMATION_MESSAGE);

        }
    }


    private void RegisterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterButtonActionPerformed
        // TODO add your handling code here:
        if (mode == 1) {
            updateData();
        } else if (mode == 2) {
            registerNewAdmin();
        } else {

            registrationProcess();
        }
    }//GEN-LAST:event_RegisterButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_exitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CashierRegiLabel;
    private javax.swing.JButton ClearButton;
    private javax.swing.JButton RegisterButton;
    private javax.swing.JButton exitButton;
    private textfield.TextField txtAddress;
    private textfield.TextField txtEmail;
    private textfield.TextField txtMobile;
    private textfield.TextField txtName1;
    private textfield.TextField txtPassword;
    private textfield.TextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
