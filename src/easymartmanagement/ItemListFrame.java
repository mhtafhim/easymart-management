/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package easymartmanagement;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static jdk.nashorn.internal.objects.NativeString.toUpperCase;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Tafhim
 */
public class ItemListFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    Connection con;

    public ItemListFrame() {
        initComponents();
        try {
            con = DriverManager.getConnection("jdbc:derby://localhost:1527/easymart");
            if (con != null) {
                System.out.println("connection establised");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error in connection", JOptionPane.INFORMATION_MESSAGE);
        }
        showAll();
        
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }
    
     public ItemListFrame(int x) {
        initComponents();
        try {
            con = DriverManager.getConnection("jdbc:derby://localhost:1527/easymart");
            if (con != null) {
                System.out.println("connection establised");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error in connection", JOptionPane.INFORMATION_MESSAGE);
        }
        showAll();
        
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        deleteItemButton.setEnabled(false);
    }
    
    
    

    private void showAll() {
        try {
            String sql = "SELECT * FROM ITEMTABLE ORDER BY ITEMDESCRIPTION ASC";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            ITEMTABLE.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.INFORMATION_MESSAGE);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        deleteItemButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ITEMTABLE = new javax.swing.JTable();
        itemCodeField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        itemDescriptionField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        quantityField = new javax.swing.JTextField();
        packSizeField = new javax.swing.JTextField();
        addItemButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        updateItemButton = new javax.swing.JButton();
        unitPriceField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        searchItemButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(140, 207, 207));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        deleteItemButton.setText("Delete Item");
        deleteItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteItemButtonActionPerformed(evt);
            }
        });
        jPanel1.add(deleteItemButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(718, 135, -1, -1));

        jLabel5.setText("Quantity");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 138, -1, -1));

        ITEMTABLE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ITEMCODE", "ITEMDESCRIPTION", "PACKSIZE", "UNITPRICE", "QUANTITY"
            }
        ));
        jScrollPane1.setViewportView(ITEMTABLE);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 173, 941, 304));
        jPanel1.add(itemCodeField, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 38, 256, -1));

        jLabel2.setText("Item Description");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 85, -1, -1));
        jPanel1.add(itemDescriptionField, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 82, 256, -1));

        jLabel3.setText("Pack Size");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(482, 41, -1, -1));

        quantityField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityFieldActionPerformed(evt);
            }
        });
        jPanel1.add(quantityField, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 135, 256, -1));
        jPanel1.add(packSizeField, new org.netbeans.lib.awtextra.AbsoluteConstraints(621, 38, 289, -1));

        addItemButton.setText("Add Item");
        addItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemButtonActionPerformed(evt);
            }
        });
        jPanel1.add(addItemButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(465, 135, -1, -1));

        jLabel4.setText("Unit Price");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(482, 85, -1, -1));

        updateItemButton.setText("Update Item");
        updateItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateItemButtonActionPerformed(evt);
            }
        });
        jPanel1.add(updateItemButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(582, 135, -1, -1));

        unitPriceField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitPriceFieldActionPerformed(evt);
            }
        });
        jPanel1.add(unitPriceField, new org.netbeans.lib.awtextra.AbsoluteConstraints(621, 82, 289, -1));

        jLabel1.setText("Item Code");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 41, -1, -1));

        searchItemButton.setText("Search");
        searchItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchItemButtonActionPerformed(evt);
            }
        });
        jPanel1.add(searchItemButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(851, 135, 109, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 510));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void updateItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateItemButtonActionPerformed
        // TODO add your handling code here:
        int row = -1;
        String itemCode = toUpperCase(itemCodeField.getText());
        itemCodeField.setText("");
        String itemDescription = itemDescriptionField.getText();
        String packSize = packSizeField.getText();
        String quantity = quantityField.getText();
        int quantityint = Integer.parseInt(quantity);
        String unitPrice = unitPriceField.getText();
        itemDescriptionField.setText("");
        packSizeField.setText("");
        quantityField.setText("");
        unitPriceField.setText("");
        
        try {
            String sql = "UPDATE ITEMTABLE SET ITEMDESCRIPTION = '" + itemDescription + "', PACKSIZE = '" + packSize + "', QUANTITY = " + quantityint + ", UNITPRICE = '" + unitPrice + "' WHERE ITEMCODE = '" + itemCode+ "'";
            Statement st = con.createStatement();
            row = st.executeUpdate(sql);

            JOptionPane.showMessageDialog(null, "Data update successful. Row:" + row, "Information", JOptionPane.INFORMATION_MESSAGE);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.INFORMATION_MESSAGE);

        }
        showAll();
    }//GEN-LAST:event_updateItemButtonActionPerformed

    private void quantityFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityFieldActionPerformed

    private void unitPriceFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitPriceFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unitPriceFieldActionPerformed

    private void addItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemButtonActionPerformed
        // TODO add your handling code here:
        int row = -1;
        String itemCode = toUpperCase(itemCodeField.getText());
        itemCodeField.setText("");
        String itemDescription = itemDescriptionField.getText();
        String packSize = packSizeField.getText();
        String quantity = quantityField.getText();
        int quantityint = Integer.parseInt(quantity);
        String unitPrice = unitPriceField.getText();
        itemDescriptionField.setText("");
        packSizeField.setText("");
        quantityField.setText("");
        unitPriceField.setText("");
        try {
            String sql = "INSERT INTO ITEMTABLE(ITEMCODE,ITEMDESCRIPTION, PACKSIZE,UNITPRICE,QUANTITY) VALUES( ?,  ?,  ?,  ?, ?)";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, itemCode);
            ps.setString(2, itemDescription);
            ps.setString(3, packSize);
            ps.setString(4, unitPrice);
            ps.setInt(5, quantityint);

            row = ps.executeUpdate();

            System.out.println("Inserted successfully");
            //  JOptionPane.showMessageDialog(null, "Data insertionsuccessful.Row:" + row, "Information", JOptionPane.INFORMATION_MESSAGE);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(),
                    "Error", JOptionPane.INFORMATION_MESSAGE);

        }
        showAll();
    }//GEN-LAST:event_addItemButtonActionPerformed

    private void deleteItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteItemButtonActionPerformed
        // TODO add your handling code here:
        int row = -1;
        try {
            String itemCode = toUpperCase(itemCodeField.getText());
            String sql = "DELETE FROM ITEMTABLE WHERE ITEMCODE = '" + itemCode + "'";

            Statement st = con.createStatement();

            row = st.executeUpdate(sql);

            System.out.println("Deletion successful. Row:" + row + " Information");
            //  JOptionPane.showMessageDialog(null, "Deletion successful. Row:" + row, "Information", JOptionPane.INFORMATION_MESSAGE);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.INFORMATION_MESSAGE);
        }
        showAll();
    }//GEN-LAST:event_deleteItemButtonActionPerformed

    private void searchItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchItemButtonActionPerformed
        try {
            // TODO add your handling code here:
            String itemCode = toUpperCase(itemCodeField.getText());
            String sql = "SELECT * FROM ITEMTABLE WHERE ITEMCODE = '" +itemCode +"'";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while(rs.next())
            {
                
                itemDescriptionField.setText(rs.getString("ITEMDESCRIPTION"));
                packSizeField.setText(rs.getString("PACKSIZE"));
                quantityField.setText(rs.getString("QUANTITY"));
                unitPriceField.setText(rs.getString("UNITPRICE"));
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(ItemListFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchItemButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ItemListFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ItemListFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ItemListFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ItemListFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ItemListFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ITEMTABLE;
    private javax.swing.JButton addItemButton;
    private javax.swing.JButton deleteItemButton;
    private javax.swing.JTextField itemCodeField;
    private javax.swing.JTextField itemDescriptionField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField packSizeField;
    private javax.swing.JTextField quantityField;
    private javax.swing.JButton searchItemButton;
    private javax.swing.JTextField unitPriceField;
    private javax.swing.JButton updateItemButton;
    // End of variables declaration//GEN-END:variables
}
